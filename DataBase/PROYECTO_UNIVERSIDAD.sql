CREATE DATABASE UNIVERSIDAD_1
USE UNIVERSIDAD_1

--- TABLAS ---
-- ASIGNATURAS
-- DOCENTE
-- ESTUDIANTE
-- RECORD ACADEMICO


IF OBJECT_ID ('ASIGNATURAS') IS NOT NULL
DROP TABLE ASIGNATURAS
CREATE TABLE ASIGNATURAS(
ID INT IDENTITY(1,1) NOT NULL,
CODIGO VARCHAR(3) PRIMARY KEY,
NOMBRE VARCHAR (30) NOT NULL,
CREDITOS TINYINT NOT NULL,
)

GO
CREATE TABLE DOCENTES(
ID INT IDENTITY(1,1) NOT NULL,
IDENTIFICACION VARCHAR (12),
NOMBRES VARCHAR (30) NOT NULL,
APELLIDOS VARCHAR (50) NOT NULL,
CODIGO_ASIGNATURA VARCHAR(3) CONSTRAINT FK_DOCENTES_01
FOREIGN KEY REFERENCES ASIGNATURAS(CODIGO)
ON UPDATE CASCADE
ON DELETE CASCADE
CONSTRAINT PK_DOCENTES_01 PRIMARY KEY (IDENTIFICACION),

)
GO

CREATE TABLE ESTUDIANTES(
ID INT IDENTITY(1,1) NOT NULL,
IDENTIFICACION VARCHAR (12) NOT NULL PRIMARY KEY,
NOMBRES VARCHAR (30) NOT NULL,
APELLIDOS VARCHAR (30) NOT NULL,
SEMESTRE VARCHAR (12) NOT NULL,
CARRERA VARCHAR (20) NOT NULL,
CODIGO_ASIGNATURA VARCHAR(3) CONSTRAINT FK_ESTUDIANTES_01
FOREIGN KEY REFERENCES ASIGNATURAS(CODIGO)
ON UPDATE CASCADE
ON DELETE CASCADE
)
GO

GO
CREATE TABLE RECORD_ACADEMICO(
ID INT IDENTITY (1,1) NOT NULL,
CODIGO VARCHAR (10) NOT NULL PRIMARY KEY,
FECHA DATE DEFAULT GETDATE(),
PERIODO VARCHAR (15) NOT NULL,
NOTA1 DECIMAL(3,2) NOT NULL,
NOTA2 DECIMAL (3,2) NOT NULL,
PROMEDIO AS ((NOTA1+NOTA2)/2),
CODIGO_ESTUDIANTE VARCHAR (12) CONSTRAINT FK_RECORD_ACADEMICO_01
FOREIGN KEY REFERENCES ESTUDIANTES(IDENTIFICACION),
CODIGO_DOCENTE VARCHAR (12) CONSTRAINT RECORD_ACADEMICO_02
FOREIGN KEY REFERENCES DOCENTES(IDENTIFICACION)
ON UPDATE CASCADE
ON DELETE CASCADE
)


-- MOSTRAR ASIGNATURAS	
CREATE PROC SP_MOSTRARASIGNATURAS
AS 
BEGIN
SELECT ID ,CODIGO, NOMBRE ,CREDITOS FROM ASIGNATURAS ORDER BY ID	
		
END



-- MOSTRAR ASIGNATURAS	POR ID
CREATE PROC SP_MOSTRARASIGNATURASXID (@ID INT)
AS 
BEGIN
SELECT ID ,CODIGO, NOMBRE ,CREDITOS FROM ASIGNATURAS WHERE ID = @ID
		
END



-- INSERTAR ASIGNATURAS POR ID
CREATE PROC SP_INSERTARASIGNATURASXID (@CODIGO VARCHAR(3),@NOMBRE VARCHAR(30), @CREDITOS TINYINT)
AS 
BEGIN
INSERT INTO ASIGNATURAS(CODIGO,NOMBRE,CREDITOS)
VALUES (@CODIGO,@NOMBRE,@CREDITOS)
		
END



-- ELIMINAR ASIGNATURAS
CREATE PROC SP_ELIMINARASIGNATURASXID (@ID INT)
AS 
BEGIN
DELETE FROM ASIGNATURAS WHERE ID = @ID
END



-------------------------------------------DOCENTES-----------------------------------------------------------------------
-- MOSTRAR DOCENTES	
CREATE PROC SP_MOSTRARDOCENTES
AS 
BEGIN
SELECT ID ,IDENTIFICACION, NOMBRES,APELLIDOS,CODIGO_ASIGNATURA FROM DOCENTES ORDER BY ID	
		
END



-- MOSTRAR DOCENTES	POR ID
CREATE PROC SP_MOSTRARDOCENTESXID (@ID INT)
AS 
BEGIN
SELECT ID ,IDENTIFICACION, NOMBRES,APELLIDOS,CODIGO_ASIGNATURA FROM DOCENTES WHERE ID = @ID
		
END



-- INSERTAR DOCENTES POR ID
CREATE PROC SP_INSERTARDOCENTESXID (@IDENTIFICACION VARCHAR (12),@NOMBRES VARCHAR (30), @APELLIDOS VARCHAR (50), @CODIGO_ASIGNATURA VARCHAR(3))
AS 
BEGIN
INSERT INTO DOCENTES(IDENTIFICACION,NOMBRES,APELLIDOS,CODIGO_ASIGNATURA)
VALUES (@IDENTIFICACION,@NOMBRES,@APELLIDOS,@CODIGO_ASIGNATURA)
		
END



-- ELIMINAR DOCENTE
CREATE PROC SP_ELIMINARDOCENTEXID (@ID INT)
AS 
BEGIN
DELETE FROM DOCENTES WHERE ID = @ID
END



-------------------------------------------ESTUDIANTES-----------------------------------------------------------------------
-- MOSTRAR ESTUDIANTES	
CREATE PROC SP_MOSTRARESTUDIANTES
AS 
BEGIN
SELECT ID ,IDENTIFICACION, NOMBRES,APELLIDOS,SEMESTRE,CARRERA,CODIGO_ASIGNATURA FROM ESTUDIANTES ORDER BY ID	
		
END



-- MOSTRAR ESTUDIANTES	POR ID
CREATE PROC SP_MOSTRARESTUDIANTESXID (@ID INT)
AS 
BEGIN
SELECT ID ,IDENTIFICACION, NOMBRES,APELLIDOS,SEMESTRE,CARRERA,CODIGO_ASIGNATURA FROM ESTUDIANTES WHERE ID = @ID
		
END



-- INSERTAR ESTUDIANTES POR ID
CREATE PROC SP_INSERTARESTUDIANTESXID (@IDENTIFICACION VARCHAR (12),@NOMBRES VARCHAR (30), @APELLIDOS VARCHAR (50),@SEMESTRE VARCHAR (12),@CARRERA VARCHAR (20), @CODIGO_ASIGNATURA VARCHAR(3))
AS 
BEGIN
INSERT INTO ESTUDIANTES(IDENTIFICACION, NOMBRES,APELLIDOS,SEMESTRE,CARRERA,CODIGO_ASIGNATURA)
VALUES (@IDENTIFICACION,@NOMBRES,@APELLIDOS,@SEMESTRE,@CARRERA,@CODIGO_ASIGNATURA)
		
END


-- ELIMINAR ESTUDIANTES
CREATE PROC SP_ElIMINARESTUDIANTESXID (@ID INT)
AS 
BEGIN
DELETE FROM ESTUDIANTES WHERE ID = @ID
END



-------------------------------------------RECORDS-----------------------------------------------------------------------

-- MOSTRAR RECORD	
ALTER PROC SP_MOSTRARRECORD
AS 
BEGIN
SELECT R.ID ,R.CODIGO, R.FECHA,R.PERIODO, R.NOTA1, R.NOTA2, R.PROMEDIO, E.NOMBRES AS NOMBRE_ESTUDIANTE, D.NOMBRES AS NOMBRE_DOCENTE FROM RECORD_ACADEMICO R 
INNER JOIN ESTUDIANTES E ON R.CODIGO_ESTUDIANTE = E.IDENTIFICACION
INNER JOIN DOCENTES D ON R.CODIGO_DOCENTE = D.IDENTIFICACION
		
END



-- MOSTRAR RECORD POR ID
ALTER PROC SP_MOSTRARRECORDXID (@ID INT)
AS 
BEGIN
SELECT R.ID ,R.CODIGO, R.FECHA,R.PERIODO, R.NOTA1, R.NOTA2, R.PROMEDIO, E.NOMBRES AS NOMBRE_ESTUDIANTE, D.NOMBRES AS NOMBRE_DOCENTE FROM RECORD_ACADEMICO R 
INNER JOIN ESTUDIANTES E ON R.CODIGO_ESTUDIANTE = E.IDENTIFICACION
INNER JOIN DOCENTES D ON R.CODIGO_DOCENTE = D.IDENTIFICACION WHERE R.ID = @ID
		
END


-- INSERTAR RECORD POR ID
ALTER PROC SP_INSERTARRECORDXID (@CODIGO VARCHAR (12), @PERIODO VARCHAR (50),@NOTA1 DECIMAL(3,2),@NOTA2 DECIMAL(3,2),@CODIGO_ESTUDIANTE VARCHAR(12),@CODIGO_DOCENTE VARCHAR(12))
AS 
BEGIN
INSERT INTO RECORD_ACADEMICO(CODIGO,PERIODO,NOTA1,NOTA2,CODIGO_ESTUDIANTE,CODIGO_DOCENTE)
VALUES (@CODIGO,@PERIODO,@NOTA1,@NOTA2,@CODIGO_ESTUDIANTE,@CODIGO_DOCENTE)
		
END


-- ELIMINAR RECORD POR ID

CREATE PROC SP_ElIMINARRECORDXID (@ID INT)
AS 
BEGIN
DELETE FROM RECORD_ACADEMICO WHERE ID = @ID
END

